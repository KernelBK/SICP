
; T 2.27 deep-reverse

(define (reverse items new-items)
  (cond
    ((null? items) new-items)
    (else (reverse (cdr items) (cons (car items) new-items)))
    )
  )

(define x '((1 2) (3 4 5 (6 7))))

(define (deep-reverse items new-items)
  (cond
    ((null? items) new-items)
    (else (deep-reverse (cdr items) (cons (cond
                                            ((pair? (car items)) (deep-reverse (car items) ()))
                                            (else (car items))
                                          )
                                          new-items)))
    )
  )

;   (deep-reverse x ())
;=> (((7 6) 5 4 3) (2 1))
