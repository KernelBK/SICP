;calc b^n
(define (expt b n)
  (expt-iter b n 1)
  )
(define expt-iter
  (lambda (b counter product)
    (cond
      ((zero? counter) product)
      (else (expt-iter b (- counter 1) (* b product)))
      )
    )
  )
;(expt 2 5)
;(expt-iter 2 5 1)
;(expt-iter 2 4 2)
;(expt-iter 2 3 4)
;(expt-iter 2 2 8)
;(expt-iter 2 1 16)
;(expt-iter 2 0 32) ——> product (32)

;线性迭代，O(n)步 O(1)空间
