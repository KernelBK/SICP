
;过程作为返回值 来定义 平均阻尼 有什么优点
;如何求解函数 f(x) 的不动点 （if exists）
;+++++++++++++++++++
(define tolerance 0.00001)
(define (fixed-point f guess)
  (cond
    ((close-enough? guess (f guess)) guess)
    (else (fixed-point f (f guess)))
    )
  )
(define (close-enough? x y)
  (< (abs (- x y)) tolerance)
  )
;++++++++++++++++++++++
(define (sqrtx x)
  (fixed-point (average-damp (lambda (y) (/ x y))) 1.0)
  )

;过程作为返回值  定义平均阻尼（一个过程）
;输入是一个函数f (任意函数),对f 进行平均阻尼 并返回平均阻尼处理后的函数
(define (average-damp f)
  (lambda (x) (average x (f x)))
  )
(define (average x y)
  (/ (+ x y) 2))

*****
*****
优点
模块 功能的原子化（一个过程一个独立的功能，不动点过程，平均阻尼过程，求平方根过程）
解耦？
通用性很强
抽象
*****
与原始的求根代码做对比，感受会很鲜明。（有对比才有理解）
;牛顿法求解二次根式的值
;可改进：三个函数的参数值传来传去，没有必要，可以借助块结构来避免
(define sqrtX 
  (lambda (x guess)
    (cond
      ((good-enough? guess (guessImprove x guess)) guess)
      (else (sqrtX x (guessImprove x guess)))
      )
    )
  )
; 考察newguess与oldguess之差与oldguess 的比值，可以提高精度
(define good-enough?
  (lambda (old new)
    (< (abs (/ (- new old) old))  0.001)
  )
  )
(define guessImprove
  (lambda (x guess)
    (/ (+ guess (/ x guess)) 2)
    )
  )
  
 *****
 *****
 *****
