; T 1.41
(define (double g)
  (lambda (x) (g (g x)))
  )
(define (inc x)
  (+ x 1)
  )
(define (square x) (* x x))

;(((double (double double)) inc) 5)
;((double (double double)) inc)

; T 1.42
(define (compose f g) ;f(g(x)) 函数复合
  (lambda (x) (f (g x)))
  )

; T 1.43
; 寻找递归关系 (repeated f n) 与 (repeated f n-1) 并比较
(define (repeated f n)
  (cond
    ((= n 1) f)
    (else (compose f (repeated f (- n 1))))
    )
  )
;((repeated square 2) 5)

; T 1.44
(define (smooth f)
  (define dx 0.0001)
  (lambda (x) (/ (+ (f (- x dx)) (f x) (f (+ x dx))) 3))
  )
(define (repeated-smooth f n)
  ((repeat smooth n) f)
  )

******
