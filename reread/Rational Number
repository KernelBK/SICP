
一般而言，数据抽象的基本思想就是为每一类数据对象标识出一组操作，使得对这类数据对象的
所有操作都可以基于它们表述，而且在操作这些数据对象时也只使用它们。

# 有理数系统
构造函数 make-rat
选择函数 numer denom

2.1.3 数据意味着什么？
一般而言，我们总可以将数据定义为一组适当的选择函数和构造函数，以及为使这些过程成为一套
合法表示，它们就必须满足一组特定条件。

--------------------------------------------
; rational number

; 构造 与 选择
(define (make-rat n d) (cons n d)) ; 构造有理数
(define (numer rational-number) (car rational-number)) ; 取分子
(define (denom rational-number) (cdr rational-number)) ; 取分母

; 加 减 乘 除 操作
(define (add-rat x y)
  (make-rat (+ (* (numer x) (denom y))
               (* (numer y) (denom x)))
            (* (denom x) (denom y))))
(define (sub-rat x y)
  (make-rat (- (* (numer x) (denom y))
               (* (numer y) (denom x)))
            (* (denom x) (denom y))))
(define (mul-rat x y)
  (make-rat (* (numer x) (numer y))
            (* (denom x) (denom y))))
(define (div-rat x y)
  (make-rat (* (numer x) (denom y))
            (* (denom x) (numer y))))
(define (equal-rat? x y)
  (= (* (numer x) (denom y))
     (* (numer y) (denom x))))
   
(define (print-rat x) ; 打印有理数 3/4
  (display (numer x))
  (display "/")
  (display (denom x))
  (newline)
  )

; test
(print-rat (add-rat (make-rat 1 2) (make-rat 6 5)))

------------------------------------------------------
