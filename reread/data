第一章 复合过程

第二章 复合数据

更高的概念层次

*有理数系统
**将分子和分母粘合在一起——一个复合数据对象


复合对象的使用将真正提高程序设计语言的表达能力。
考虑形成“线性组合” ax + by，我们可以定义过程：
(define (linear-combination a b x y)
	(+ (* a x) (* b y))
	)
如果x， y 都是数值，这样没有问题。
但是，如果我们关心的不仅仅是数，假定在写这个过程时，我们希望表述的是
基于加和乘形成线性组合的思想，所针对的可以是有理数，复数，多项式或者
其他东西，我们可以将其表述为下面形式的过程：
(define (linear-combination a b x y)
	(add (mul a x) (mul b y))
	)
这个例子说明，为什么程序设计语言能够提供直接操作复合对象的能力是如此的
重要，因为如果没有这种能力，我们就没有办法让一个象linear-combination
这样的过程将其参数传递给add和mul，而不必知道这些参数的具体细节结构。

**主要问题
抽象作为克服复杂性的一种技术
体会，数据抽象将如何使我们能在程序的不同部分之间建立起适当的抽象屏障。

我们将会看到，形成复合数据的关键就在于，程序设计语言里应该提供了某种“粘合剂”，
它们可以用于把一些数据对象组合起来，形成更复杂的数据对象。
粘合剂可能有很多不同的种类。确实，我们还会发现怎样去构造出根本没有任何特定“数据”
操作，只是由过程形成的复合数据。

？？？闭包概念

--数据抽象导引
使用与其内部实现分离
数据抽象是一种方法学，它使我们能将一个复合数据对象的使用，与该数据对象怎样
由更基本的数据对象构造起来的细节隔离开。

