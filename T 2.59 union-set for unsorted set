
; unsorted set
(define (element-of-set? x set)
  (cond
    ((null? set) #f)
    ((eq? (car set) x) #t)
    (else (element-of-set? x (cdr set)))))
  
(define (adjoin-set x set)
  (cond
    ((element-of-set? x set) set)
    (else (cons x set))))
  
(define (intersection-set set1 set2)
  (cond
    ((or (null? set1) (null? set2)) '())
    ((element-of-set? (car set1) set2) 
                    (cons (car set1) (intersection-set (cdr set1) set2)))
    (else (intersection-set (cdr set1) set2))
    )
  )

;T 2.59 union-set 为采用未排序表的集合实现定义union-set操作
(define (union-set set1 set2)
  (cond
    ((null? set1) set2)
    ((null? set2) set1)
    ((element-of-set? (car set1) set2)
                      (union-set (cdr set1) set2))
    (else (cons (car set1) (union-set (cdr set1) set2)))
    )
  )

调用演示：
   (intersection-set '(1 2 3) '(2 3 4 5))
=> (2 3)
   (union-set '(1 2 3) '(3 4 5 6))
=> (1 2 3 4 5 6)

*******
*******
